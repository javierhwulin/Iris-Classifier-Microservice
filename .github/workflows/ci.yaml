name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  # Job 1 · Python/uv tests
    test:
        runs-on: ubuntu-latest
        steps:
            # 1. Check out source
            - uses: actions/checkout@v4
            
            # 2. Install system Python
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                python-version: "3.12"
                
            # 3. Install uv (static binary)
            - name: Install uv
              run: curl -LsSf https://astral.sh/uv/install.sh | sh
            
            # 4. Make uv available on PATH
            - name: Add uv to PATH
              run: echo "$HOME/.cargo/bin" >> "$GITHUB_PATH"
              
            # 5. Cache uv’s package downloads
            - name: Cache uv downloads
              uses: actions/cache@v4
              with:
                path: ~/.cache/uv
                key: ${{ runner.os }}-uv-${{ hashFiles('**/uv.lock') }}
                restore-keys: |
                    ${{ runner.os }}-uv-
            
            # 6. Create venv & install deps + project in editable mode
            - name: Install dependencies
              run: |
                uv venv --python 3.12 .venv
                source .venv/bin/activate
                uv sync
                uv pip install -e .
            
            # 7. Train model
            - name: Train model
              run: |
                source .venv/bin/activate
                python -m app.training.train
            - name: Upload model artifact
              uses: actions/upload-artifact@v4
              with:
                name: iris-model
                path: models/iris_net.pt
            # 8. Run test suite
            - name: Run tests
              run: |
                source .venv/bin/activate
                pytest --maxfail=1 -v
  # Job 2 · Docker smoke test 
    test-docker:
      runs-on: ubuntu-latest
      needs: test   # run only if Job 1 passed
      steps:
          - uses: actions/checkout@v4

          # Build gives us modern Docker build features
          - uses: docker/setup-buildx-action@v3

          - name: Download model artifact
            uses: actions/download-artifact@v4
            with:
              name: iris-model
              path: models/
          # Build the final runtime stage
          - name: Build Docker Image
            run: docker build --target runtime -t iris-service:ci .
        
          - name: Smoke-test container
            run: |
              docker run -d --name iris-ci -p 8000:80 iris-service:ci
              # wait a moment for Uvicorn
              sleep 5
              curl -f http://localhost:8000/health
              curl -f -X POST http://localhost:8000/v1/predict \
                -H "Content-Type: application/json" \
                -d '{"sepal_length":5.1, "sepal_width":3.5, "petal_length":1.4, "petal_width":0.2}'
              docker logs iris-ci
              docker stop iris-ci
